---

- name: Stop supervisor
  raw: "which supervisorctl && supervisorctl stop all || return 0"

- name: create virtualenv and install requirements into virtualenv 
  sudo_user: "{{ app_user }}"
  raw: "( sleep 60 && cd && source $(which virtualenvwrapper.sh) && mkvirtualenv {{ application_name }} && workon {{ application_name }} && add2virtualenv {{ application_name }} && pip install -r {{ requirements_file }})>/home/{{ app_user }}/require.log"

- name: Create virtual env postactivate
  template: src=virtualenv_postactivate.j2 dest={{ virtualenv_path }}/bin/postactivate
    owner={{ app_user }}
    group={{ app_user }}

- name: Create settings dir
  file: path={{ settings_dir }} state=directory
        owner={{ app_user }}
        group={{ app_user }} 

- name: Create app conf
  template: src=settings.j2 dest={{ settings_dir }}/config.json
    owner={{ app_user }}
    group={{ app_user }}
    mode=0400

#TODO PR for requiments postgis not on the same machine
- name: install module pip
  sudo_user: "{{ app_user }}"
  raw: "source $(which virtualenvwrapper.sh) && workon {{ application_name }} && pip install {{ item }}"
  with_items:
      - httplib2

- name: Run the Django syncdb command
  django_manage:
    command: syncdb
    app_path: '{{ application_path }}'
    virtualenv: '{{ virtualenv_path }}'
    settings: '{{ django_settings_file }}'
  environment: django_environment
  when: run_django_syncdb
  tags: django

- name: Run Django South migrations
  django_manage:
    command: migrate
    app_path: '{{ application_path }}'
    virtualenv: '{{ virtualenv_path }}'
    settings: '{{ django_settings_file }}'
  environment: django_environment
  when: run_django_south_migration
  tags: django

- name: Run Django collectstatic
  django_manage:
    command: collectstatic
    app_path: '{{ application_path }}'
    virtualenv: '{{ virtualenv_path }}'
    settings: '{{ django_settings_file }}'
  environment: django_environment
  when: run_django_collectstatic
  tags: django
